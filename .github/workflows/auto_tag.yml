name: Create Tag

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: paulhatch/semantic-version@v4.0.2
        id: semantic_version
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "BREAKING CHANGES:"
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "feat:"
          # A string to determine the format of the version output
          format: "${major}.${minor}.${patch}"
          # Indicate whether short tags like 'v1' should be supported. If false only full
          # tags like 'v1.0.0' will be recognized.
          short_tags: false
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: true
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ""
          custom_tag: ${{ steps.semantic_version.outputs.version_tag }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: 315523860108.dkr.ecr.ap-northeast-1.amazonaws.com
          REPOSITORY: github-walletcore
          IMAGE_TAG: ${{ steps.semantic_version.outputs.version_tag }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          