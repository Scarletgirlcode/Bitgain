name: Linux CI Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    permissions:
      contents: read
      checks: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install system dependencies
        run: |
          tools/install-sys-dependencies-linux

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        id: rust_registry_cache
        with:
          key: ${{ runner.os }}-cargo-${{ hashFiles('tools/install-rust-dependencies') }}
          workspaces: |
            rust
      - name: Install Rust dependencies
        if: steps.rust_registry_cache.outputs.cache-hit != 'true'
        run: |
          tools/install-rust-dependencies dev

      - name: Check code formatting
        run: |
          cargo fmt --check
        working-directory: rust

      - name: Check Clippy warnings
        run: |
          cargo clippy -- -D warnings
        working-directory: rust

      - name: Check unused dependencies
        run: |
          cargo udeps
        working-directory: rust

      - name: Run tests
        run: |
          cargo llvm-cov nextest --profile ci --lcov --output-path coverage.info
        working-directory: rust

      - name: Rust Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        continue-on-error: true
        with:
          name: Rust Tests
          path: |
            rust/target/nextest/ci/junit.xml
          reporter: java-junit

      - name: Gather and check Rust code coverage
        run: |
          tools/check-coverage rust/coverage.stats rust/coverage.info
