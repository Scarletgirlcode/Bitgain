// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: authz_tx.proto

#include "authz_tx.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace cosmos {
namespace authz {
namespace v1beta1 {
constexpr Grant::Grant(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : authorization_(nullptr)
  , expiration_(nullptr){}
struct GrantDefaultTypeInternal {
  constexpr GrantDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~GrantDefaultTypeInternal() {}
  union {
    Grant _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT GrantDefaultTypeInternal _Grant_default_instance_;
constexpr MsgGrant::MsgGrant(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : granter_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grantee_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grant_(nullptr){}
struct MsgGrantDefaultTypeInternal {
  constexpr MsgGrantDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgGrantDefaultTypeInternal() {}
  union {
    MsgGrant _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgGrantDefaultTypeInternal _MsgGrant_default_instance_;
constexpr MsgRevoke::MsgRevoke(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : granter_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , grantee_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , msg_type_url_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct MsgRevokeDefaultTypeInternal {
  constexpr MsgRevokeDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgRevokeDefaultTypeInternal() {}
  union {
    MsgRevoke _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgRevokeDefaultTypeInternal _MsgRevoke_default_instance_;
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_authz_5ftx_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_authz_5ftx_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_authz_5ftx_2eproto = nullptr;

const uint32_t TableStruct_authz_5ftx_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::Grant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::Grant, authorization_),
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::Grant, expiration_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::MsgGrant, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::MsgGrant, granter_),
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::MsgGrant, grantee_),
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::MsgGrant, grant_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::MsgRevoke, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::MsgRevoke, granter_),
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::MsgRevoke, grantee_),
  PROTOBUF_FIELD_OFFSET(::cosmos::authz::v1beta1::MsgRevoke, msg_type_url_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::cosmos::authz::v1beta1::Grant)},
  { 8, -1, -1, sizeof(::cosmos::authz::v1beta1::MsgGrant)},
  { 17, -1, -1, sizeof(::cosmos::authz::v1beta1::MsgRevoke)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cosmos::authz::v1beta1::_Grant_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cosmos::authz::v1beta1::_MsgGrant_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cosmos::authz::v1beta1::_MsgRevoke_default_instance_),
};

const char descriptor_table_protodef_authz_5ftx_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016authz_tx.proto\022\024cosmos.authz.v1beta1\032\031"
  "google/protobuf/any.proto\032\037google/protob"
  "uf/timestamp.proto\"d\n\005Grant\022+\n\rauthoriza"
  "tion\030\001 \001(\0132\024.google.protobuf.Any\022.\n\nexpi"
  "ration\030\002 \001(\0132\032.google.protobuf.Timestamp"
  "\"X\n\010MsgGrant\022\017\n\007granter\030\001 \001(\t\022\017\n\007grantee"
  "\030\002 \001(\t\022*\n\005grant\030\003 \001(\0132\033.cosmos.authz.v1b"
  "eta1.Grant\"C\n\tMsgRevoke\022\017\n\007granter\030\001 \001(\t"
  "\022\017\n\007grantee\030\002 \001(\t\022\024\n\014msg_type_url\030\003 \001(\tb"
  "\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_authz_5ftx_2eproto_deps[2] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_authz_5ftx_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_authz_5ftx_2eproto = {
  false, false, 367, descriptor_table_protodef_authz_5ftx_2eproto, "authz_tx.proto", 
  &descriptor_table_authz_5ftx_2eproto_once, descriptor_table_authz_5ftx_2eproto_deps, 2, 3,
  schemas, file_default_instances, TableStruct_authz_5ftx_2eproto::offsets,
  file_level_metadata_authz_5ftx_2eproto, file_level_enum_descriptors_authz_5ftx_2eproto, file_level_service_descriptors_authz_5ftx_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_authz_5ftx_2eproto_getter() {
  return &descriptor_table_authz_5ftx_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_authz_5ftx_2eproto(&descriptor_table_authz_5ftx_2eproto);
namespace cosmos {
namespace authz {
namespace v1beta1 {

// ===================================================================

class Grant::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Any& authorization(const Grant* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& expiration(const Grant* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Any&
Grant::_Internal::authorization(const Grant* msg) {
  return *msg->authorization_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
Grant::_Internal::expiration(const Grant* msg) {
  return *msg->expiration_;
}
void Grant::clear_authorization() {
  if (GetArenaForAllocation() == nullptr && authorization_ != nullptr) {
    delete authorization_;
  }
  authorization_ = nullptr;
}
void Grant::clear_expiration() {
  if (GetArenaForAllocation() == nullptr && expiration_ != nullptr) {
    delete expiration_;
  }
  expiration_ = nullptr;
}
Grant::Grant(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:cosmos.authz.v1beta1.Grant)
}
Grant::Grant(const Grant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_authorization()) {
    authorization_ = new ::PROTOBUF_NAMESPACE_ID::Any(*from.authorization_);
  } else {
    authorization_ = nullptr;
  }
  if (from._internal_has_expiration()) {
    expiration_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.expiration_);
  } else {
    expiration_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.authz.v1beta1.Grant)
}

inline void Grant::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&authorization_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&expiration_) -
    reinterpret_cast<char*>(&authorization_)) + sizeof(expiration_));
}

Grant::~Grant() {
  // @@protoc_insertion_point(destructor:cosmos.authz.v1beta1.Grant)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void Grant::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete authorization_;
  if (this != internal_default_instance()) delete expiration_;
}

void Grant::ArenaDtor(void* object) {
  Grant* _this = reinterpret_cast< Grant* >(object);
  (void)_this;
}
void Grant::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Grant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Grant::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.authz.v1beta1.Grant)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && authorization_ != nullptr) {
    delete authorization_;
  }
  authorization_ = nullptr;
  if (GetArenaForAllocation() == nullptr && expiration_ != nullptr) {
    delete expiration_;
  }
  expiration_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Grant::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Any authorization = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_authorization(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp expiration = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_expiration(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Grant::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.authz.v1beta1.Grant)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Any authorization = 1;
  if (this->_internal_has_authorization()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::authorization(this), target, stream);
  }

  // .google.protobuf.Timestamp expiration = 2;
  if (this->_internal_has_expiration()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::expiration(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.authz.v1beta1.Grant)
  return target;
}

size_t Grant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.authz.v1beta1.Grant)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any authorization = 1;
  if (this->_internal_has_authorization()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *authorization_);
  }

  // .google.protobuf.Timestamp expiration = 2;
  if (this->_internal_has_expiration()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *expiration_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Grant::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Grant::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Grant::GetClassData() const { return &_class_data_; }

void Grant::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Grant *>(to)->MergeFrom(
      static_cast<const Grant &>(from));
}


void Grant::MergeFrom(const Grant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cosmos.authz.v1beta1.Grant)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_authorization()) {
    _internal_mutable_authorization()->::PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_authorization());
  }
  if (from._internal_has_expiration()) {
    _internal_mutable_expiration()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_expiration());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Grant::CopyFrom(const Grant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.authz.v1beta1.Grant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Grant::IsInitialized() const {
  return true;
}

void Grant::InternalSwap(Grant* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Grant, expiration_)
      + sizeof(Grant::expiration_)
      - PROTOBUF_FIELD_OFFSET(Grant, authorization_)>(
          reinterpret_cast<char*>(&authorization_),
          reinterpret_cast<char*>(&other->authorization_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Grant::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_authz_5ftx_2eproto_getter, &descriptor_table_authz_5ftx_2eproto_once,
      file_level_metadata_authz_5ftx_2eproto[0]);
}

// ===================================================================

class MsgGrant::_Internal {
 public:
  static const ::cosmos::authz::v1beta1::Grant& grant(const MsgGrant* msg);
};

const ::cosmos::authz::v1beta1::Grant&
MsgGrant::_Internal::grant(const MsgGrant* msg) {
  return *msg->grant_;
}
MsgGrant::MsgGrant(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:cosmos.authz.v1beta1.MsgGrant)
}
MsgGrant::MsgGrant(const MsgGrant& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  granter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    granter_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_granter().empty()) {
    granter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_granter(), 
      GetArenaForAllocation());
  }
  grantee_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    grantee_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_grantee().empty()) {
    grantee_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_grantee(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_grant()) {
    grant_ = new ::cosmos::authz::v1beta1::Grant(*from.grant_);
  } else {
    grant_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.authz.v1beta1.MsgGrant)
}

inline void MsgGrant::SharedCtor() {
granter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  granter_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grantee_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  grantee_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grant_ = nullptr;
}

MsgGrant::~MsgGrant() {
  // @@protoc_insertion_point(destructor:cosmos.authz.v1beta1.MsgGrant)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MsgGrant::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  granter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  grantee_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete grant_;
}

void MsgGrant::ArenaDtor(void* object) {
  MsgGrant* _this = reinterpret_cast< MsgGrant* >(object);
  (void)_this;
}
void MsgGrant::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgGrant::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MsgGrant::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.authz.v1beta1.MsgGrant)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  granter_.ClearToEmpty();
  grantee_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && grant_ != nullptr) {
    delete grant_;
  }
  grant_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgGrant::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string granter = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_granter();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmos.authz.v1beta1.MsgGrant.granter"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string grantee = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_grantee();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmos.authz.v1beta1.MsgGrant.grantee"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .cosmos.authz.v1beta1.Grant grant = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_grant(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MsgGrant::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.authz.v1beta1.MsgGrant)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string granter = 1;
  if (!this->_internal_granter().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_granter().data(), static_cast<int>(this->_internal_granter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos.authz.v1beta1.MsgGrant.granter");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_granter(), target);
  }

  // string grantee = 2;
  if (!this->_internal_grantee().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_grantee().data(), static_cast<int>(this->_internal_grantee().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos.authz.v1beta1.MsgGrant.grantee");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_grantee(), target);
  }

  // .cosmos.authz.v1beta1.Grant grant = 3;
  if (this->_internal_has_grant()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::grant(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.authz.v1beta1.MsgGrant)
  return target;
}

size_t MsgGrant::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.authz.v1beta1.MsgGrant)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string granter = 1;
  if (!this->_internal_granter().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_granter());
  }

  // string grantee = 2;
  if (!this->_internal_grantee().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_grantee());
  }

  // .cosmos.authz.v1beta1.Grant grant = 3;
  if (this->_internal_has_grant()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *grant_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgGrant::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MsgGrant::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgGrant::GetClassData() const { return &_class_data_; }

void MsgGrant::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MsgGrant *>(to)->MergeFrom(
      static_cast<const MsgGrant &>(from));
}


void MsgGrant::MergeFrom(const MsgGrant& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cosmos.authz.v1beta1.MsgGrant)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_granter().empty()) {
    _internal_set_granter(from._internal_granter());
  }
  if (!from._internal_grantee().empty()) {
    _internal_set_grantee(from._internal_grantee());
  }
  if (from._internal_has_grant()) {
    _internal_mutable_grant()->::cosmos::authz::v1beta1::Grant::MergeFrom(from._internal_grant());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgGrant::CopyFrom(const MsgGrant& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.authz.v1beta1.MsgGrant)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgGrant::IsInitialized() const {
  return true;
}

void MsgGrant::InternalSwap(MsgGrant* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &granter_, lhs_arena,
      &other->granter_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &grantee_, lhs_arena,
      &other->grantee_, rhs_arena
  );
  swap(grant_, other->grant_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgGrant::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_authz_5ftx_2eproto_getter, &descriptor_table_authz_5ftx_2eproto_once,
      file_level_metadata_authz_5ftx_2eproto[1]);
}

// ===================================================================

class MsgRevoke::_Internal {
 public:
};

MsgRevoke::MsgRevoke(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:cosmos.authz.v1beta1.MsgRevoke)
}
MsgRevoke::MsgRevoke(const MsgRevoke& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  granter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    granter_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_granter().empty()) {
    granter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_granter(), 
      GetArenaForAllocation());
  }
  grantee_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    grantee_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_grantee().empty()) {
    grantee_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_grantee(), 
      GetArenaForAllocation());
  }
  msg_type_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    msg_type_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_msg_type_url().empty()) {
    msg_type_url_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg_type_url(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.authz.v1beta1.MsgRevoke)
}

inline void MsgRevoke::SharedCtor() {
granter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  granter_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
grantee_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  grantee_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
msg_type_url_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  msg_type_url_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgRevoke::~MsgRevoke() {
  // @@protoc_insertion_point(destructor:cosmos.authz.v1beta1.MsgRevoke)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MsgRevoke::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  granter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  grantee_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  msg_type_url_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MsgRevoke::ArenaDtor(void* object) {
  MsgRevoke* _this = reinterpret_cast< MsgRevoke* >(object);
  (void)_this;
}
void MsgRevoke::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgRevoke::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MsgRevoke::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.authz.v1beta1.MsgRevoke)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  granter_.ClearToEmpty();
  grantee_.ClearToEmpty();
  msg_type_url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgRevoke::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string granter = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_granter();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmos.authz.v1beta1.MsgRevoke.granter"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string grantee = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_grantee();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmos.authz.v1beta1.MsgRevoke.grantee"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string msg_type_url = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_msg_type_url();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmos.authz.v1beta1.MsgRevoke.msg_type_url"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MsgRevoke::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.authz.v1beta1.MsgRevoke)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string granter = 1;
  if (!this->_internal_granter().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_granter().data(), static_cast<int>(this->_internal_granter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos.authz.v1beta1.MsgRevoke.granter");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_granter(), target);
  }

  // string grantee = 2;
  if (!this->_internal_grantee().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_grantee().data(), static_cast<int>(this->_internal_grantee().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos.authz.v1beta1.MsgRevoke.grantee");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_grantee(), target);
  }

  // string msg_type_url = 3;
  if (!this->_internal_msg_type_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_msg_type_url().data(), static_cast<int>(this->_internal_msg_type_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos.authz.v1beta1.MsgRevoke.msg_type_url");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_msg_type_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.authz.v1beta1.MsgRevoke)
  return target;
}

size_t MsgRevoke::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.authz.v1beta1.MsgRevoke)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string granter = 1;
  if (!this->_internal_granter().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_granter());
  }

  // string grantee = 2;
  if (!this->_internal_grantee().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_grantee());
  }

  // string msg_type_url = 3;
  if (!this->_internal_msg_type_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_msg_type_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgRevoke::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MsgRevoke::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgRevoke::GetClassData() const { return &_class_data_; }

void MsgRevoke::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MsgRevoke *>(to)->MergeFrom(
      static_cast<const MsgRevoke &>(from));
}


void MsgRevoke::MergeFrom(const MsgRevoke& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cosmos.authz.v1beta1.MsgRevoke)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_granter().empty()) {
    _internal_set_granter(from._internal_granter());
  }
  if (!from._internal_grantee().empty()) {
    _internal_set_grantee(from._internal_grantee());
  }
  if (!from._internal_msg_type_url().empty()) {
    _internal_set_msg_type_url(from._internal_msg_type_url());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgRevoke::CopyFrom(const MsgRevoke& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.authz.v1beta1.MsgRevoke)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgRevoke::IsInitialized() const {
  return true;
}

void MsgRevoke::InternalSwap(MsgRevoke* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &granter_, lhs_arena,
      &other->granter_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &grantee_, lhs_arena,
      &other->grantee_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &msg_type_url_, lhs_arena,
      &other->msg_type_url_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgRevoke::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_authz_5ftx_2eproto_getter, &descriptor_table_authz_5ftx_2eproto_once,
      file_level_metadata_authz_5ftx_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace authz
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::authz::v1beta1::Grant* Arena::CreateMaybeMessage< ::cosmos::authz::v1beta1::Grant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::authz::v1beta1::Grant >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::authz::v1beta1::MsgGrant* Arena::CreateMaybeMessage< ::cosmos::authz::v1beta1::MsgGrant >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::authz::v1beta1::MsgGrant >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::authz::v1beta1::MsgRevoke* Arena::CreateMaybeMessage< ::cosmos::authz::v1beta1::MsgRevoke >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::authz::v1beta1::MsgRevoke >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
