// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bank_tx.proto

#include "bank_tx.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace cosmos {
namespace bank {
namespace v1beta1 {
constexpr MsgSend::MsgSend(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : amount_()
  , from_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , to_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct MsgSendDefaultTypeInternal {
  constexpr MsgSendDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgSendDefaultTypeInternal() {}
  union {
    MsgSend _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgSendDefaultTypeInternal _MsgSend_default_instance_;
}  // namespace v1beta1
}  // namespace bank
}  // namespace cosmos
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_bank_5ftx_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_bank_5ftx_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_bank_5ftx_2eproto = nullptr;

const uint32_t TableStruct_bank_5ftx_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cosmos::bank::v1beta1::MsgSend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cosmos::bank::v1beta1::MsgSend, from_address_),
  PROTOBUF_FIELD_OFFSET(::cosmos::bank::v1beta1::MsgSend, to_address_),
  PROTOBUF_FIELD_OFFSET(::cosmos::bank::v1beta1::MsgSend, amount_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::cosmos::bank::v1beta1::MsgSend)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cosmos::bank::v1beta1::_MsgSend_default_instance_),
};

const char descriptor_table_protodef_bank_5ftx_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rbank_tx.proto\022\023cosmos.bank.v1beta1\032\nco"
  "in.proto\"^\n\007MsgSend\022\024\n\014from_address\030\001 \001("
  "\t\022\022\n\nto_address\030\002 \001(\t\022)\n\006amount\030\003 \003(\0132\031."
  "cosmos.base.v1beta1.Coinb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_bank_5ftx_2eproto_deps[1] = {
  &::descriptor_table_coin_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_bank_5ftx_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_bank_5ftx_2eproto = {
  false, false, 152, descriptor_table_protodef_bank_5ftx_2eproto, "bank_tx.proto", 
  &descriptor_table_bank_5ftx_2eproto_once, descriptor_table_bank_5ftx_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_bank_5ftx_2eproto::offsets,
  file_level_metadata_bank_5ftx_2eproto, file_level_enum_descriptors_bank_5ftx_2eproto, file_level_service_descriptors_bank_5ftx_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_bank_5ftx_2eproto_getter() {
  return &descriptor_table_bank_5ftx_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_bank_5ftx_2eproto(&descriptor_table_bank_5ftx_2eproto);
namespace cosmos {
namespace bank {
namespace v1beta1 {

// ===================================================================

class MsgSend::_Internal {
 public:
};

void MsgSend::clear_amount() {
  amount_.Clear();
}
MsgSend::MsgSend(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  amount_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:cosmos.bank.v1beta1.MsgSend)
}
MsgSend::MsgSend(const MsgSend& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      amount_(from.amount_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  from_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    from_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_from_address().empty()) {
    from_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_from_address(), 
      GetArenaForAllocation());
  }
  to_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    to_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_to_address().empty()) {
    to_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_to_address(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.bank.v1beta1.MsgSend)
}

inline void MsgSend::SharedCtor() {
from_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  from_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
to_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  to_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgSend::~MsgSend() {
  // @@protoc_insertion_point(destructor:cosmos.bank.v1beta1.MsgSend)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MsgSend::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  from_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  to_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MsgSend::ArenaDtor(void* object) {
  MsgSend* _this = reinterpret_cast< MsgSend* >(object);
  (void)_this;
}
void MsgSend::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgSend::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MsgSend::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.bank.v1beta1.MsgSend)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  amount_.Clear();
  from_address_.ClearToEmpty();
  to_address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgSend::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string from_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_from_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmos.bank.v1beta1.MsgSend.from_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string to_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_to_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmos.bank.v1beta1.MsgSend.to_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .cosmos.base.v1beta1.Coin amount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_amount(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MsgSend::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.bank.v1beta1.MsgSend)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_address = 1;
  if (!this->_internal_from_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_from_address().data(), static_cast<int>(this->_internal_from_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos.bank.v1beta1.MsgSend.from_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_from_address(), target);
  }

  // string to_address = 2;
  if (!this->_internal_to_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_to_address().data(), static_cast<int>(this->_internal_to_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos.bank.v1beta1.MsgSend.to_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_to_address(), target);
  }

  // repeated .cosmos.base.v1beta1.Coin amount = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_amount_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_amount(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.bank.v1beta1.MsgSend)
  return target;
}

size_t MsgSend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.bank.v1beta1.MsgSend)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.v1beta1.Coin amount = 3;
  total_size += 1UL * this->_internal_amount_size();
  for (const auto& msg : this->amount_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string from_address = 1;
  if (!this->_internal_from_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_from_address());
  }

  // string to_address = 2;
  if (!this->_internal_to_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_to_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgSend::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MsgSend::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgSend::GetClassData() const { return &_class_data_; }

void MsgSend::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MsgSend *>(to)->MergeFrom(
      static_cast<const MsgSend &>(from));
}


void MsgSend::MergeFrom(const MsgSend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cosmos.bank.v1beta1.MsgSend)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  amount_.MergeFrom(from.amount_);
  if (!from._internal_from_address().empty()) {
    _internal_set_from_address(from._internal_from_address());
  }
  if (!from._internal_to_address().empty()) {
    _internal_set_to_address(from._internal_to_address());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgSend::CopyFrom(const MsgSend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.bank.v1beta1.MsgSend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgSend::IsInitialized() const {
  return true;
}

void MsgSend::InternalSwap(MsgSend* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  amount_.InternalSwap(&other->amount_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &from_address_, lhs_arena,
      &other->from_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &to_address_, lhs_arena,
      &other->to_address_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgSend::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_bank_5ftx_2eproto_getter, &descriptor_table_bank_5ftx_2eproto_once,
      file_level_metadata_bank_5ftx_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace bank
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::bank::v1beta1::MsgSend* Arena::CreateMaybeMessage< ::cosmos::bank::v1beta1::MsgSend >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::bank::v1beta1::MsgSend >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
