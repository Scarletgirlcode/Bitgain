// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: staking_tx.proto

#include "staking_tx.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace cosmos {
namespace staking {
namespace v1beta1 {
constexpr MsgDelegate::MsgDelegate(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : delegator_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , validator_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(nullptr){}
struct MsgDelegateDefaultTypeInternal {
  constexpr MsgDelegateDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgDelegateDefaultTypeInternal() {}
  union {
    MsgDelegate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgDelegateDefaultTypeInternal _MsgDelegate_default_instance_;
constexpr MsgUndelegate::MsgUndelegate(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : delegator_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , validator_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(nullptr){}
struct MsgUndelegateDefaultTypeInternal {
  constexpr MsgUndelegateDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgUndelegateDefaultTypeInternal() {}
  union {
    MsgUndelegate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgUndelegateDefaultTypeInternal _MsgUndelegate_default_instance_;
constexpr MsgBeginRedelegate::MsgBeginRedelegate(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : delegator_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , validator_src_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , validator_dst_address_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , amount_(nullptr){}
struct MsgBeginRedelegateDefaultTypeInternal {
  constexpr MsgBeginRedelegateDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgBeginRedelegateDefaultTypeInternal() {}
  union {
    MsgBeginRedelegate _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgBeginRedelegateDefaultTypeInternal _MsgBeginRedelegate_default_instance_;
}  // namespace v1beta1
}  // namespace staking
}  // namespace cosmos
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_staking_5ftx_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_staking_5ftx_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_staking_5ftx_2eproto = nullptr;

const uint32_t TableStruct_staking_5ftx_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgDelegate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgDelegate, delegator_address_),
  PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgDelegate, validator_address_),
  PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgDelegate, amount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgUndelegate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgUndelegate, delegator_address_),
  PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgUndelegate, validator_address_),
  PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgUndelegate, amount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgBeginRedelegate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgBeginRedelegate, delegator_address_),
  PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgBeginRedelegate, validator_src_address_),
  PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgBeginRedelegate, validator_dst_address_),
  PROTOBUF_FIELD_OFFSET(::cosmos::staking::v1beta1::MsgBeginRedelegate, amount_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::cosmos::staking::v1beta1::MsgDelegate)},
  { 9, -1, -1, sizeof(::cosmos::staking::v1beta1::MsgUndelegate)},
  { 18, -1, -1, sizeof(::cosmos::staking::v1beta1::MsgBeginRedelegate)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cosmos::staking::v1beta1::_MsgDelegate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cosmos::staking::v1beta1::_MsgUndelegate_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::cosmos::staking::v1beta1::_MsgBeginRedelegate_default_instance_),
};

const char descriptor_table_protodef_staking_5ftx_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020staking_tx.proto\022\026cosmos.staking.v1bet"
  "a1\032\ncoin.proto\"n\n\013MsgDelegate\022\031\n\021delegat"
  "or_address\030\001 \001(\t\022\031\n\021validator_address\030\002 "
  "\001(\t\022)\n\006amount\030\003 \001(\0132\031.cosmos.base.v1beta"
  "1.Coin\"p\n\rMsgUndelegate\022\031\n\021delegator_add"
  "ress\030\001 \001(\t\022\031\n\021validator_address\030\002 \001(\t\022)\n"
  "\006amount\030\003 \001(\0132\031.cosmos.base.v1beta1.Coin"
  "\"\230\001\n\022MsgBeginRedelegate\022\031\n\021delegator_add"
  "ress\030\001 \001(\t\022\035\n\025validator_src_address\030\002 \001("
  "\t\022\035\n\025validator_dst_address\030\003 \001(\t\022)\n\006amou"
  "nt\030\004 \001(\0132\031.cosmos.base.v1beta1.Coinb\006pro"
  "to3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_staking_5ftx_2eproto_deps[1] = {
  &::descriptor_table_coin_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_staking_5ftx_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_staking_5ftx_2eproto = {
  false, false, 443, descriptor_table_protodef_staking_5ftx_2eproto, "staking_tx.proto", 
  &descriptor_table_staking_5ftx_2eproto_once, descriptor_table_staking_5ftx_2eproto_deps, 1, 3,
  schemas, file_default_instances, TableStruct_staking_5ftx_2eproto::offsets,
  file_level_metadata_staking_5ftx_2eproto, file_level_enum_descriptors_staking_5ftx_2eproto, file_level_service_descriptors_staking_5ftx_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_staking_5ftx_2eproto_getter() {
  return &descriptor_table_staking_5ftx_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_staking_5ftx_2eproto(&descriptor_table_staking_5ftx_2eproto);
namespace cosmos {
namespace staking {
namespace v1beta1 {

// ===================================================================

class MsgDelegate::_Internal {
 public:
  static const ::cosmos::base::v1beta1::Coin& amount(const MsgDelegate* msg);
};

const ::cosmos::base::v1beta1::Coin&
MsgDelegate::_Internal::amount(const MsgDelegate* msg) {
  return *msg->amount_;
}
void MsgDelegate::clear_amount() {
  if (GetArenaForAllocation() == nullptr && amount_ != nullptr) {
    delete amount_;
  }
  amount_ = nullptr;
}
MsgDelegate::MsgDelegate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.MsgDelegate)
}
MsgDelegate::MsgDelegate(const MsgDelegate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  delegator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    delegator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_address().empty()) {
    delegator_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_delegator_address(), 
      GetArenaForAllocation());
  }
  validator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    validator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_address().empty()) {
    validator_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_validator_address(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_amount()) {
    amount_ = new ::cosmos::base::v1beta1::Coin(*from.amount_);
  } else {
    amount_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.MsgDelegate)
}

inline void MsgDelegate::SharedCtor() {
delegator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  delegator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
validator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  validator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
amount_ = nullptr;
}

MsgDelegate::~MsgDelegate() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.MsgDelegate)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MsgDelegate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  delegator_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  validator_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete amount_;
}

void MsgDelegate::ArenaDtor(void* object) {
  MsgDelegate* _this = reinterpret_cast< MsgDelegate* >(object);
  (void)_this;
}
void MsgDelegate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgDelegate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MsgDelegate::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.MsgDelegate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delegator_address_.ClearToEmpty();
  validator_address_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && amount_ != nullptr) {
    delete amount_;
  }
  amount_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgDelegate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgDelegate.delegator_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string validator_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_validator_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgDelegate.validator_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .cosmos.base.v1beta1.Coin amount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MsgDelegate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.MsgDelegate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_address = 1;
  if (!this->_internal_delegator_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_delegator_address().data(), static_cast<int>(this->_internal_delegator_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos.staking.v1beta1.MsgDelegate.delegator_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_delegator_address(), target);
  }

  // string validator_address = 2;
  if (!this->_internal_validator_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_validator_address().data(), static_cast<int>(this->_internal_validator_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos.staking.v1beta1.MsgDelegate.validator_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_validator_address(), target);
  }

  // .cosmos.base.v1beta1.Coin amount = 3;
  if (this->_internal_has_amount()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::amount(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.MsgDelegate)
  return target;
}

size_t MsgDelegate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.MsgDelegate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_address = 1;
  if (!this->_internal_delegator_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_delegator_address());
  }

  // string validator_address = 2;
  if (!this->_internal_validator_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_validator_address());
  }

  // .cosmos.base.v1beta1.Coin amount = 3;
  if (this->_internal_has_amount()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgDelegate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MsgDelegate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgDelegate::GetClassData() const { return &_class_data_; }

void MsgDelegate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MsgDelegate *>(to)->MergeFrom(
      static_cast<const MsgDelegate &>(from));
}


void MsgDelegate::MergeFrom(const MsgDelegate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.MsgDelegate)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_validator_address().empty()) {
    _internal_set_validator_address(from._internal_validator_address());
  }
  if (from._internal_has_amount()) {
    _internal_mutable_amount()->::cosmos::base::v1beta1::Coin::MergeFrom(from._internal_amount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgDelegate::CopyFrom(const MsgDelegate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.MsgDelegate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgDelegate::IsInitialized() const {
  return true;
}

void MsgDelegate::InternalSwap(MsgDelegate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &delegator_address_, lhs_arena,
      &other->delegator_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &validator_address_, lhs_arena,
      &other->validator_address_, rhs_arena
  );
  swap(amount_, other->amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgDelegate::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_staking_5ftx_2eproto_getter, &descriptor_table_staking_5ftx_2eproto_once,
      file_level_metadata_staking_5ftx_2eproto[0]);
}

// ===================================================================

class MsgUndelegate::_Internal {
 public:
  static const ::cosmos::base::v1beta1::Coin& amount(const MsgUndelegate* msg);
};

const ::cosmos::base::v1beta1::Coin&
MsgUndelegate::_Internal::amount(const MsgUndelegate* msg) {
  return *msg->amount_;
}
void MsgUndelegate::clear_amount() {
  if (GetArenaForAllocation() == nullptr && amount_ != nullptr) {
    delete amount_;
  }
  amount_ = nullptr;
}
MsgUndelegate::MsgUndelegate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.MsgUndelegate)
}
MsgUndelegate::MsgUndelegate(const MsgUndelegate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  delegator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    delegator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_address().empty()) {
    delegator_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_delegator_address(), 
      GetArenaForAllocation());
  }
  validator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    validator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_address().empty()) {
    validator_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_validator_address(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_amount()) {
    amount_ = new ::cosmos::base::v1beta1::Coin(*from.amount_);
  } else {
    amount_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.MsgUndelegate)
}

inline void MsgUndelegate::SharedCtor() {
delegator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  delegator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
validator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  validator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
amount_ = nullptr;
}

MsgUndelegate::~MsgUndelegate() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.MsgUndelegate)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MsgUndelegate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  delegator_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  validator_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete amount_;
}

void MsgUndelegate::ArenaDtor(void* object) {
  MsgUndelegate* _this = reinterpret_cast< MsgUndelegate* >(object);
  (void)_this;
}
void MsgUndelegate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgUndelegate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MsgUndelegate::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.MsgUndelegate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delegator_address_.ClearToEmpty();
  validator_address_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && amount_ != nullptr) {
    delete amount_;
  }
  amount_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgUndelegate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgUndelegate.delegator_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string validator_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_validator_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgUndelegate.validator_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .cosmos.base.v1beta1.Coin amount = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MsgUndelegate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.MsgUndelegate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_address = 1;
  if (!this->_internal_delegator_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_delegator_address().data(), static_cast<int>(this->_internal_delegator_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos.staking.v1beta1.MsgUndelegate.delegator_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_delegator_address(), target);
  }

  // string validator_address = 2;
  if (!this->_internal_validator_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_validator_address().data(), static_cast<int>(this->_internal_validator_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos.staking.v1beta1.MsgUndelegate.validator_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_validator_address(), target);
  }

  // .cosmos.base.v1beta1.Coin amount = 3;
  if (this->_internal_has_amount()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::amount(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.MsgUndelegate)
  return target;
}

size_t MsgUndelegate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.MsgUndelegate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_address = 1;
  if (!this->_internal_delegator_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_delegator_address());
  }

  // string validator_address = 2;
  if (!this->_internal_validator_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_validator_address());
  }

  // .cosmos.base.v1beta1.Coin amount = 3;
  if (this->_internal_has_amount()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgUndelegate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MsgUndelegate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgUndelegate::GetClassData() const { return &_class_data_; }

void MsgUndelegate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MsgUndelegate *>(to)->MergeFrom(
      static_cast<const MsgUndelegate &>(from));
}


void MsgUndelegate::MergeFrom(const MsgUndelegate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.MsgUndelegate)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_validator_address().empty()) {
    _internal_set_validator_address(from._internal_validator_address());
  }
  if (from._internal_has_amount()) {
    _internal_mutable_amount()->::cosmos::base::v1beta1::Coin::MergeFrom(from._internal_amount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgUndelegate::CopyFrom(const MsgUndelegate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.MsgUndelegate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUndelegate::IsInitialized() const {
  return true;
}

void MsgUndelegate::InternalSwap(MsgUndelegate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &delegator_address_, lhs_arena,
      &other->delegator_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &validator_address_, lhs_arena,
      &other->validator_address_, rhs_arena
  );
  swap(amount_, other->amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgUndelegate::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_staking_5ftx_2eproto_getter, &descriptor_table_staking_5ftx_2eproto_once,
      file_level_metadata_staking_5ftx_2eproto[1]);
}

// ===================================================================

class MsgBeginRedelegate::_Internal {
 public:
  static const ::cosmos::base::v1beta1::Coin& amount(const MsgBeginRedelegate* msg);
};

const ::cosmos::base::v1beta1::Coin&
MsgBeginRedelegate::_Internal::amount(const MsgBeginRedelegate* msg) {
  return *msg->amount_;
}
void MsgBeginRedelegate::clear_amount() {
  if (GetArenaForAllocation() == nullptr && amount_ != nullptr) {
    delete amount_;
  }
  amount_ = nullptr;
}
MsgBeginRedelegate::MsgBeginRedelegate(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:cosmos.staking.v1beta1.MsgBeginRedelegate)
}
MsgBeginRedelegate::MsgBeginRedelegate(const MsgBeginRedelegate& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  delegator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    delegator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_delegator_address().empty()) {
    delegator_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_delegator_address(), 
      GetArenaForAllocation());
  }
  validator_src_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    validator_src_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_src_address().empty()) {
    validator_src_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_validator_src_address(), 
      GetArenaForAllocation());
  }
  validator_dst_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    validator_dst_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_validator_dst_address().empty()) {
    validator_dst_address_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_validator_dst_address(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_amount()) {
    amount_ = new ::cosmos::base::v1beta1::Coin(*from.amount_);
  } else {
    amount_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:cosmos.staking.v1beta1.MsgBeginRedelegate)
}

inline void MsgBeginRedelegate::SharedCtor() {
delegator_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  delegator_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
validator_src_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  validator_src_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
validator_dst_address_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  validator_dst_address_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
amount_ = nullptr;
}

MsgBeginRedelegate::~MsgBeginRedelegate() {
  // @@protoc_insertion_point(destructor:cosmos.staking.v1beta1.MsgBeginRedelegate)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MsgBeginRedelegate::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  delegator_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  validator_src_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  validator_dst_address_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete amount_;
}

void MsgBeginRedelegate::ArenaDtor(void* object) {
  MsgBeginRedelegate* _this = reinterpret_cast< MsgBeginRedelegate* >(object);
  (void)_this;
}
void MsgBeginRedelegate::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgBeginRedelegate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MsgBeginRedelegate::Clear() {
// @@protoc_insertion_point(message_clear_start:cosmos.staking.v1beta1.MsgBeginRedelegate)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  delegator_address_.ClearToEmpty();
  validator_src_address_.ClearToEmpty();
  validator_dst_address_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && amount_ != nullptr) {
    delete amount_;
  }
  amount_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgBeginRedelegate::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string delegator_address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_delegator_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgBeginRedelegate.delegator_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string validator_src_address = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_validator_src_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgBeginRedelegate.validator_src_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string validator_dst_address = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_validator_dst_address();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "cosmos.staking.v1beta1.MsgBeginRedelegate.validator_dst_address"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .cosmos.base.v1beta1.Coin amount = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_amount(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MsgBeginRedelegate::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:cosmos.staking.v1beta1.MsgBeginRedelegate)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string delegator_address = 1;
  if (!this->_internal_delegator_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_delegator_address().data(), static_cast<int>(this->_internal_delegator_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos.staking.v1beta1.MsgBeginRedelegate.delegator_address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_delegator_address(), target);
  }

  // string validator_src_address = 2;
  if (!this->_internal_validator_src_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_validator_src_address().data(), static_cast<int>(this->_internal_validator_src_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos.staking.v1beta1.MsgBeginRedelegate.validator_src_address");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_validator_src_address(), target);
  }

  // string validator_dst_address = 3;
  if (!this->_internal_validator_dst_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_validator_dst_address().data(), static_cast<int>(this->_internal_validator_dst_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "cosmos.staking.v1beta1.MsgBeginRedelegate.validator_dst_address");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_validator_dst_address(), target);
  }

  // .cosmos.base.v1beta1.Coin amount = 4;
  if (this->_internal_has_amount()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::amount(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cosmos.staking.v1beta1.MsgBeginRedelegate)
  return target;
}

size_t MsgBeginRedelegate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cosmos.staking.v1beta1.MsgBeginRedelegate)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string delegator_address = 1;
  if (!this->_internal_delegator_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_delegator_address());
  }

  // string validator_src_address = 2;
  if (!this->_internal_validator_src_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_validator_src_address());
  }

  // string validator_dst_address = 3;
  if (!this->_internal_validator_dst_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_validator_dst_address());
  }

  // .cosmos.base.v1beta1.Coin amount = 4;
  if (this->_internal_has_amount()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgBeginRedelegate::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MsgBeginRedelegate::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgBeginRedelegate::GetClassData() const { return &_class_data_; }

void MsgBeginRedelegate::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MsgBeginRedelegate *>(to)->MergeFrom(
      static_cast<const MsgBeginRedelegate &>(from));
}


void MsgBeginRedelegate::MergeFrom(const MsgBeginRedelegate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cosmos.staking.v1beta1.MsgBeginRedelegate)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_delegator_address().empty()) {
    _internal_set_delegator_address(from._internal_delegator_address());
  }
  if (!from._internal_validator_src_address().empty()) {
    _internal_set_validator_src_address(from._internal_validator_src_address());
  }
  if (!from._internal_validator_dst_address().empty()) {
    _internal_set_validator_dst_address(from._internal_validator_dst_address());
  }
  if (from._internal_has_amount()) {
    _internal_mutable_amount()->::cosmos::base::v1beta1::Coin::MergeFrom(from._internal_amount());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgBeginRedelegate::CopyFrom(const MsgBeginRedelegate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cosmos.staking.v1beta1.MsgBeginRedelegate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgBeginRedelegate::IsInitialized() const {
  return true;
}

void MsgBeginRedelegate::InternalSwap(MsgBeginRedelegate* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &delegator_address_, lhs_arena,
      &other->delegator_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &validator_src_address_, lhs_arena,
      &other->validator_src_address_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &validator_dst_address_, lhs_arena,
      &other->validator_dst_address_, rhs_arena
  );
  swap(amount_, other->amount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgBeginRedelegate::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_staking_5ftx_2eproto_getter, &descriptor_table_staking_5ftx_2eproto_once,
      file_level_metadata_staking_5ftx_2eproto[2]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace staking
}  // namespace cosmos
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::MsgDelegate* Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::MsgDelegate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::MsgDelegate >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::MsgUndelegate* Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::MsgUndelegate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::MsgUndelegate >(arena);
}
template<> PROTOBUF_NOINLINE ::cosmos::staking::v1beta1::MsgBeginRedelegate* Arena::CreateMaybeMessage< ::cosmos::staking::v1beta1::MsgBeginRedelegate >(Arena* arena) {
  return Arena::CreateMessageInternal< ::cosmos::staking::v1beta1::MsgBeginRedelegate >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
