// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: terra_wasm_v1beta1_tx.proto

#include "terra_wasm_v1beta1_tx.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace terra {
namespace wasm {
namespace v1beta1 {
constexpr MsgExecuteContract::MsgExecuteContract(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : coins_()
  , sender_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , contract_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , execute_msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}
struct MsgExecuteContractDefaultTypeInternal {
  constexpr MsgExecuteContractDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~MsgExecuteContractDefaultTypeInternal() {}
  union {
    MsgExecuteContract _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MsgExecuteContractDefaultTypeInternal _MsgExecuteContract_default_instance_;
}  // namespace v1beta1
}  // namespace wasm
}  // namespace terra
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_terra_5fwasm_5fv1beta1_5ftx_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_terra_5fwasm_5fv1beta1_5ftx_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_terra_5fwasm_5fv1beta1_5ftx_2eproto = nullptr;

const uint32_t TableStruct_terra_5fwasm_5fv1beta1_5ftx_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::terra::wasm::v1beta1::MsgExecuteContract, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::terra::wasm::v1beta1::MsgExecuteContract, sender_),
  PROTOBUF_FIELD_OFFSET(::terra::wasm::v1beta1::MsgExecuteContract, contract_),
  PROTOBUF_FIELD_OFFSET(::terra::wasm::v1beta1::MsgExecuteContract, execute_msg_),
  PROTOBUF_FIELD_OFFSET(::terra::wasm::v1beta1::MsgExecuteContract, coins_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::terra::wasm::v1beta1::MsgExecuteContract)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::terra::wasm::v1beta1::_MsgExecuteContract_default_instance_),
};

const char descriptor_table_protodef_terra_5fwasm_5fv1beta1_5ftx_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\033terra_wasm_v1beta1_tx.proto\022\022terra.was"
  "m.v1beta1\032\ncoin.proto\"u\n\022MsgExecuteContr"
  "act\022\016\n\006sender\030\001 \001(\t\022\020\n\010contract\030\002 \001(\t\022\023\n"
  "\013execute_msg\030\003 \001(\014\022(\n\005coins\030\005 \003(\0132\031.cosm"
  "os.base.v1beta1.Coinb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_terra_5fwasm_5fv1beta1_5ftx_2eproto_deps[1] = {
  &::descriptor_table_coin_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_terra_5fwasm_5fv1beta1_5ftx_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_terra_5fwasm_5fv1beta1_5ftx_2eproto = {
  false, false, 188, descriptor_table_protodef_terra_5fwasm_5fv1beta1_5ftx_2eproto, "terra_wasm_v1beta1_tx.proto", 
  &descriptor_table_terra_5fwasm_5fv1beta1_5ftx_2eproto_once, descriptor_table_terra_5fwasm_5fv1beta1_5ftx_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_terra_5fwasm_5fv1beta1_5ftx_2eproto::offsets,
  file_level_metadata_terra_5fwasm_5fv1beta1_5ftx_2eproto, file_level_enum_descriptors_terra_5fwasm_5fv1beta1_5ftx_2eproto, file_level_service_descriptors_terra_5fwasm_5fv1beta1_5ftx_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_terra_5fwasm_5fv1beta1_5ftx_2eproto_getter() {
  return &descriptor_table_terra_5fwasm_5fv1beta1_5ftx_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_terra_5fwasm_5fv1beta1_5ftx_2eproto(&descriptor_table_terra_5fwasm_5fv1beta1_5ftx_2eproto);
namespace terra {
namespace wasm {
namespace v1beta1 {

// ===================================================================

class MsgExecuteContract::_Internal {
 public:
};

void MsgExecuteContract::clear_coins() {
  coins_.Clear();
}
MsgExecuteContract::MsgExecuteContract(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  coins_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:terra.wasm.v1beta1.MsgExecuteContract)
}
MsgExecuteContract::MsgExecuteContract(const MsgExecuteContract& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      coins_(from.coins_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sender_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    sender_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_sender().empty()) {
    sender_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sender(), 
      GetArenaForAllocation());
  }
  contract_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    contract_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_contract().empty()) {
    contract_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_contract(), 
      GetArenaForAllocation());
  }
  execute_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    execute_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_execute_msg().empty()) {
    execute_msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_execute_msg(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:terra.wasm.v1beta1.MsgExecuteContract)
}

inline void MsgExecuteContract::SharedCtor() {
sender_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  sender_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
contract_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  contract_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
execute_msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  execute_msg_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MsgExecuteContract::~MsgExecuteContract() {
  // @@protoc_insertion_point(destructor:terra.wasm.v1beta1.MsgExecuteContract)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void MsgExecuteContract::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  sender_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  contract_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  execute_msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MsgExecuteContract::ArenaDtor(void* object) {
  MsgExecuteContract* _this = reinterpret_cast< MsgExecuteContract* >(object);
  (void)_this;
}
void MsgExecuteContract::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MsgExecuteContract::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void MsgExecuteContract::Clear() {
// @@protoc_insertion_point(message_clear_start:terra.wasm.v1beta1.MsgExecuteContract)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  coins_.Clear();
  sender_.ClearToEmpty();
  contract_.ClearToEmpty();
  execute_msg_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MsgExecuteContract::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string sender = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_sender();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "terra.wasm.v1beta1.MsgExecuteContract.sender"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string contract = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_contract();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "terra.wasm.v1beta1.MsgExecuteContract.contract"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes execute_msg = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_execute_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .cosmos.base.v1beta1.Coin coins = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_coins(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MsgExecuteContract::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:terra.wasm.v1beta1.MsgExecuteContract)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string sender = 1;
  if (!this->_internal_sender().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sender().data(), static_cast<int>(this->_internal_sender().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "terra.wasm.v1beta1.MsgExecuteContract.sender");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sender(), target);
  }

  // string contract = 2;
  if (!this->_internal_contract().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_contract().data(), static_cast<int>(this->_internal_contract().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "terra.wasm.v1beta1.MsgExecuteContract.contract");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_contract(), target);
  }

  // bytes execute_msg = 3;
  if (!this->_internal_execute_msg().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_execute_msg(), target);
  }

  // repeated .cosmos.base.v1beta1.Coin coins = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_coins_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_coins(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:terra.wasm.v1beta1.MsgExecuteContract)
  return target;
}

size_t MsgExecuteContract::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:terra.wasm.v1beta1.MsgExecuteContract)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .cosmos.base.v1beta1.Coin coins = 5;
  total_size += 1UL * this->_internal_coins_size();
  for (const auto& msg : this->coins_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string sender = 1;
  if (!this->_internal_sender().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sender());
  }

  // string contract = 2;
  if (!this->_internal_contract().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_contract());
  }

  // bytes execute_msg = 3;
  if (!this->_internal_execute_msg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_execute_msg());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MsgExecuteContract::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    MsgExecuteContract::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MsgExecuteContract::GetClassData() const { return &_class_data_; }

void MsgExecuteContract::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<MsgExecuteContract *>(to)->MergeFrom(
      static_cast<const MsgExecuteContract &>(from));
}


void MsgExecuteContract::MergeFrom(const MsgExecuteContract& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:terra.wasm.v1beta1.MsgExecuteContract)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  coins_.MergeFrom(from.coins_);
  if (!from._internal_sender().empty()) {
    _internal_set_sender(from._internal_sender());
  }
  if (!from._internal_contract().empty()) {
    _internal_set_contract(from._internal_contract());
  }
  if (!from._internal_execute_msg().empty()) {
    _internal_set_execute_msg(from._internal_execute_msg());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MsgExecuteContract::CopyFrom(const MsgExecuteContract& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:terra.wasm.v1beta1.MsgExecuteContract)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgExecuteContract::IsInitialized() const {
  return true;
}

void MsgExecuteContract::InternalSwap(MsgExecuteContract* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  coins_.InternalSwap(&other->coins_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &sender_, lhs_arena,
      &other->sender_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &contract_, lhs_arena,
      &other->contract_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &execute_msg_, lhs_arena,
      &other->execute_msg_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata MsgExecuteContract::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_terra_5fwasm_5fv1beta1_5ftx_2eproto_getter, &descriptor_table_terra_5fwasm_5fv1beta1_5ftx_2eproto_once,
      file_level_metadata_terra_5fwasm_5fv1beta1_5ftx_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1beta1
}  // namespace wasm
}  // namespace terra
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::terra::wasm::v1beta1::MsgExecuteContract* Arena::CreateMaybeMessage< ::terra::wasm::v1beta1::MsgExecuteContract >(Arena* arena) {
  return Arena::CreateMessageInternal< ::terra::wasm::v1beta1::MsgExecuteContract >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
