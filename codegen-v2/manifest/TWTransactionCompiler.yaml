name: TWTransactionCompiler
structs:
- name: TWTransactionCompiler
  is_public: true
  is_class: false
  comments:
  - Non-core transaction utility methods, like building a transaction using an external signature.
functions:
- name: TWTransactionCompilerBuildInput
  is_public: true
  is_static: true
  params:
  - name: coinType
    type:
      variant: enum
      value: TWCoinType
      is_nullable: false
  - name: from
    type:
      variant: string
      is_nullable: false
  - name: to
    type:
      variant: string
      is_nullable: false
  - name: amount
    type:
      variant: string
      is_nullable: false
  - name: asset
    type:
      variant: string
      is_nullable: false
  - name: memo
    type:
      variant: string
      is_nullable: false
  - name: chainId
    type:
      variant: string
      is_nullable: false
  return_type:
    variant: data
    is_nullable: false
  comments:
  - Builds a coin-specific SigningInput (proto object) from a simple transaction.
  - \param coin coin type.
  - \param from sender of the transaction.
  - \param to receiver of the transaction.
  - \param amount transaction amount in string
  - \param asset optional asset name, like "BNB"
  - \param memo optional memo
  - \param chainId optional chainId to override default
  - \return serialized data of the SigningInput proto object.
- name: TWTransactionCompilerPreImageHashes
  is_public: true
  is_static: true
  params:
  - name: coinType
    type:
      variant: enum
      value: TWCoinType
      is_nullable: false
  - name: txInputData
    type:
      variant: data
      is_nullable: false
  return_type:
    variant: data
    is_nullable: false
  comments:
  - Obtains pre-signing hashes of a transaction.
  - 'We provide a default `PreSigningOutput` in TransactionCompiler.proto. '
  - For some special coins, such as bitcoin, we will create a custom `PreSigningOutput` object in its proto file.
  - \param coin coin type.
  - \param txInputData The serialized data of a signing input
  - \return serialized data of a proto object `PreSigningOutput` includes hash.
- name: TWTransactionCompilerCompileWithSignatures
  is_public: true
  is_static: true
  params:
  - name: coinType
    type:
      variant: enum
      value: TWCoinType
      is_nullable: false
  - name: txInputData
    type:
      variant: data
      is_nullable: false
  - name: signatures
    type:
      variant: struct
      value: TWDataVector
      is_nullable: false
  - name: publicKeys
    type:
      variant: struct
      value: TWDataVector
      is_nullable: false
  return_type:
    variant: data
    is_nullable: false
  comments:
  - Compiles a complete transation with one or more external signatures.
  - Puts together from transaction input and provided public keys and signatures. The signatures must match the hashes
  - returned by TWTransactionCompilerPreImageHashes, in the same order. The publicKeyHash attached
  - to the hashes enable identifying the private key needed for signing the hash.
  - \param coin coin type.
  - \param txInputData The serialized data of a signing input.
  - \param signatures signatures to compile, using TWDataVector.
  - \param publicKeys public keys for signers to match private keys, using TWDataVector.
  - \return serialized data of a proto object `SigningOutput`.
