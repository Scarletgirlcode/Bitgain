name: TWBitcoinMessageSigner
structs:
- name: TWBitcoinMessageSigner
  is_public: true
  is_class: false
  comments:
  - Bitcoin message signing and verification.
  - Bitcoin Core and some other wallets support a message signing & verification format, to create a proof (a signature)
  - that someone has access to the private keys of a specific address.
  - This feature currently works on old legacy addresses only.
functions:
- name: TWBitcoinMessageSignerSignMessage
  is_public: true
  is_static: true
  params:
  - name: privateKey
    type:
      variant: struct
      value: TWPrivateKey
      is_nullable: false
  - name: address
    type:
      variant: string
      is_nullable: false
  - name: message
    type:
      variant: string
      is_nullable: false
  return_type:
    variant: string
    is_nullable: false
  comments:
  - Sign a message.
  - '\param privateKey: the private key used for signing'
  - '\param address: the address that matches the privateKey, must be a legacy address (P2PKH)'
  - '\param message: A custom message which is input to the signing.'
  - \note Address is derived assuming compressed public key format.
  - \returns the signature, Base64-encoded.  On invalid input empty string is returned. Returned object needs to be deleteed after use.
- name: TWBitcoinMessageSignerVerifyMessage
  is_public: true
  is_static: true
  params:
  - name: address
    type:
      variant: string
      is_nullable: false
  - name: message
    type:
      variant: string
      is_nullable: false
  - name: signature
    type:
      variant: string
      is_nullable: false
  return_type:
    variant: bool
    is_nullable: false
  comments:
  - Verify signature for a message.
  - '\param address: address to use, only legacy is supported'
  - '\param message: the message signed (without prefix)'
  - '\param signature: in Base64-encoded form.'
  - \returns false on any invalid input (does not throw).
