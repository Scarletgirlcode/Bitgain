name: TWAnyAddress
structs:
- name: TWPublicKey
  is_public: false
  is_class: false
- name: TWAnyAddress
  is_public: true
  is_class: true
  comments:
  - Represents an address in C++ for almost any blockchain.
inits:
- name: TWAnyAddressCreateWithString
  is_public: true
  is_nullable: true
  params:
  - name: string
    type:
      variant: string
      is_nullable: false
  - name: coin
    type:
      variant: enum
      value: TWCoinType
      is_nullable: false
  comments:
  - Creates an address from a string representation and a coin type. Must be deleted with TWAnyAddressDelete after use.
  - \param string address to create.
  - \param coin coin type of the address.
  - \return TWAnyAddress pointer or nullptr if address and coin are invalid.
- name: TWAnyAddressCreateBech32
  is_public: true
  is_nullable: true
  params:
  - name: string
    type:
      variant: string
      is_nullable: false
  - name: coin
    type:
      variant: enum
      value: TWCoinType
      is_nullable: false
  - name: hrp
    type:
      variant: string
      is_nullable: false
  comments:
  - Creates an bech32 address from a string representation, a coin type and the given hrp. Must be deleted with TWAnyAddressDelete after use.
  - \param string address to create.
  - \param coin coin type of the address.
  - \param hrp hrp of the address.
  - \return TWAnyAddress pointer or nullptr if address and coin are invalid.
- name: TWAnyAddressCreateSS58
  is_public: true
  is_nullable: true
  params:
  - name: string
    type:
      variant: string
      is_nullable: false
  - name: coin
    type:
      variant: enum
      value: TWCoinType
      is_nullable: false
  - name: ss58Prefix
    type:
      variant: u_int32_t
      is_nullable: false
  comments:
  - Creates an SS58 address from a string representation, a coin type and the given ss58Prefix. Must be deleted with TWAnyAddressDelete after use.
  - \param string address to create.
  - \param coin coin type of the address.
  - \param ss58Prefix ss58Prefix of the SS58 address.
  - \return TWAnyAddress pointer or nullptr if address and coin are invalid.
- name: TWAnyAddressCreateWithPublicKey
  is_public: true
  is_nullable: false
  params:
  - name: publicKey
    type:
      variant: struct
      value: TWPublicKey
      is_nullable: false
  - name: coin
    type:
      variant: enum
      value: TWCoinType
      is_nullable: false
  comments:
  - Creates an address from a public key.
  - \param publicKey derivates the address from the public key.
  - \param coin coin type of the address.
  - \return TWAnyAddress pointer or nullptr if public key is invalid.
- name: TWAnyAddressCreateWithPublicKeyDerivation
  is_public: true
  is_nullable: false
  params:
  - name: publicKey
    type:
      variant: struct
      value: TWPublicKey
      is_nullable: false
  - name: coin
    type:
      variant: enum
      value: TWCoinType
      is_nullable: false
  - name: derivation
    type:
      variant: enum
      value: TWDerivation
      is_nullable: false
  comments:
  - Creates an address from a public key and derivation option.
  - \param publicKey derivates the address from the public key.
  - \param coin coin type of the address.
  - \param derivation the custom derivation to use.
  - \return TWAnyAddress pointer or nullptr if public key is invalid.
- name: TWAnyAddressCreateBech32WithPublicKey
  is_public: true
  is_nullable: false
  params:
  - name: publicKey
    type:
      variant: struct
      value: TWPublicKey
      is_nullable: false
  - name: coin
    type:
      variant: enum
      value: TWCoinType
      is_nullable: false
  - name: hrp
    type:
      variant: string
      is_nullable: false
  comments:
  - Creates an bech32 address from a public key and a given hrp.
  - \param publicKey derivates the address from the public key.
  - \param coin coin type of the address.
  - \param hrp hrp of the address.
  - \return TWAnyAddress pointer or nullptr if public key is invalid.
- name: TWAnyAddressCreateSS58WithPublicKey
  is_public: true
  is_nullable: false
  params:
  - name: publicKey
    type:
      variant: struct
      value: TWPublicKey
      is_nullable: false
  - name: coin
    type:
      variant: enum
      value: TWCoinType
      is_nullable: false
  - name: ss58Prefix
    type:
      variant: u_int32_t
      is_nullable: false
  comments:
  - Creates an SS58 address from a public key and a given ss58Prefix.
  - \param publicKey derivates the address from the public key.
  - \param coin coin type of the address.
  - \param ss58Prefix ss58Prefix of the SS58 address.
  - \return TWAnyAddress pointer or nullptr if public key is invalid.
- name: TWAnyAddressCreateWithPublicKeyFilecoinAddressType
  is_public: true
  is_nullable: false
  params:
  - name: publicKey
    type:
      variant: struct
      value: TWPublicKey
      is_nullable: false
  - name: filecoinAddressType
    type:
      variant: enum
      value: TWFilecoinAddressType
      is_nullable: false
  comments:
  - Creates a Filecoin address from a public key and a given address type.
  - \param publicKey derivates the address from the public key.
  - \param filecoinAddressType Filecoin address type.
  - \return TWAnyAddress pointer or nullptr if public key is invalid.
deinits:
- name: TWAnyAddressDelete
  comments:
  - Deletes an address.
  - \param address address to delete.
functions:
- name: TWAnyAddressEqual
  is_public: true
  is_static: true
  params:
  - name: lhs
    type:
      variant: struct
      value: TWAnyAddress
      is_nullable: false
  - name: rhs
    type:
      variant: struct
      value: TWAnyAddress
      is_nullable: false
  return_type:
    variant: bool
    is_nullable: false
  comments:
  - Compares two addresses for equality.
  - \param lhs The first address to compare.
  - \param rhs The second address to compare.
  - \return bool indicating the addresses are equal.
- name: TWAnyAddressIsValid
  is_public: true
  is_static: true
  params:
  - name: string
    type:
      variant: string
      is_nullable: false
  - name: coin
    type:
      variant: enum
      value: TWCoinType
      is_nullable: false
  return_type:
    variant: bool
    is_nullable: false
  comments:
  - Determines if the string is a valid Any address.
  - \param string address to validate.
  - \param coin coin type of the address.
  - \return bool indicating if the address is valid.
- name: TWAnyAddressIsValidBech32
  is_public: true
  is_static: true
  params:
  - name: string
    type:
      variant: string
      is_nullable: false
  - name: coin
    type:
      variant: enum
      value: TWCoinType
      is_nullable: false
  - name: hrp
    type:
      variant: string
      is_nullable: false
  return_type:
    variant: bool
    is_nullable: false
  comments:
  - Determines if the string is a valid Any address with the given hrp.
  - \param string address to validate.
  - \param coin coin type of the address.
  - \param hrp explicit given hrp of the given address.
  - \return bool indicating if the address is valid.
- name: TWAnyAddressIsValidSS58
  is_public: true
  is_static: true
  params:
  - name: string
    type:
      variant: string
      is_nullable: false
  - name: coin
    type:
      variant: enum
      value: TWCoinType
      is_nullable: false
  - name: ss58Prefix
    type:
      variant: u_int32_t
      is_nullable: false
  return_type:
    variant: bool
    is_nullable: false
  comments:
  - Determines if the string is a valid Any address with the given SS58 network prefix.
  - \param string address to validate.
  - \param coin coin type of the address.
  - \param ss58Prefix ss58Prefix of the given address.
  - \return bool indicating if the address is valid.
properties:
- name: TWAnyAddressDescription
  is_public: true
  return_type:
    variant: string
    is_nullable: false
  comments:
  - Returns the address string representation.
  - \param address address to get the string representation of.
- name: TWAnyAddressCoin
  is_public: true
  return_type:
    variant: enum
    value: TWCoinType
    is_nullable: false
  comments:
  - Returns coin type of address.
  - \param address address to get the coin type of.
- name: TWAnyAddressData
  is_public: true
  return_type:
    variant: data
    is_nullable: false
  comments:
  - Returns underlaying data (public key or key hash)
  - \param address address to get the data of.
